{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Notification","propTypes","children","PropTypes","node","isRequired","Container","className","s","container","Section","title","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","message","App","state","leaveFeedback","setState","countTotalFeedback","Object","values","reduce","feedback","countPositiveFeedbackPercentage","totalFeedback","Math","round","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qIACAA,EAAOC,QAAU,CAAC,UAAY,+B,+PCM9BC,aAAaC,UAAY,CACvBC,SAAUC,IAAUC,KAAKC,YAGZC,MARf,YAAkC,IAAbJ,EAAY,EAAZA,SACnB,OAAO,qBAAKK,UAAWC,IAAEC,UAAlB,SAA8BP,K,MCaxBQ,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOT,EAAY,EAAZA,SACxB,OACE,oCACE,6BAAKS,IACJT,M,MCiBQU,MArBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SAELC,QAAS,kBAAMJ,EAAgBE,IAHjC,SAKGA,GAHIA,S,MCcAG,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,W,MCCSxB,MARf,YAAoC,IAAZyB,EAAW,EAAXA,QACtB,OAAO,kCAAKA,EAAL,QCwDMC,E,4MApDbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,cAAgB,SAAAZ,GACd,EAAKa,SAAL,eAAiBb,EAAS,EAAKW,MAAMX,GAAU,K,EAGjDc,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKL,OAAOM,QAC/B,SAACV,EAAOW,GAAR,OAAqBX,EAAQW,IAC7B,I,EAIJC,gCAAkC,WAAO,IAC/Bf,EAAS,EAAKO,MAAdP,KACFgB,EAAgB,EAAKN,qBAC3B,OAAOO,KAAKC,MAAc,IAAPlB,EAAcgB,IAAkB,G,uDAG3C,IAAD,EACwBG,KAAKZ,MAA5BP,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASX,MAAM,wBAAf,SACE,cAAC,EAAD,CACEE,QAASkB,OAAOS,KAAKD,KAAKZ,OAC1Bb,gBAAiByB,KAAKX,kBAG1B,cAAC,EAAD,CAASjB,MAAM,aAAf,SACG4B,KAAKT,qBACJ,cAAC,EAAD,CACEV,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,KAAKT,qBACZN,mBAAoBe,KAAKJ,oCAG3B,cAAC,EAAD,CAAcV,QAAQ,+B,GA7ChBgB,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.49df17ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2tApN\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nNotification.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map(option => (\n        <button\n          type=\"button\"\n          key={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <ul>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive feedback: {positivePercentage}%</li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <p> {message} </p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { Component } from 'react';\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = option => {\n    this.setState({ [option]: this.state[option] + 1 });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce(\n      (total, feedback) => total + feedback,\n      0,\n    );\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    return Math.round((good * 100) / totalFeedback) || 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}